  
<div class='container'>
  <%= simple_form_for :conversation, url: :conversations do |f| %>

      <div class="input string required recipients">
        <label class="string required" for="recipients"><abbr title="required">*</abbr>
          Recipients
        </label>
        <%= text_field_tag 'recipients' %>
      </div>

      <% if @subject.present? %>
        <%= f.input :subject, :as => :hidden, :input_html => { :value => @subject } %>
      <% else %>
        <%= f.input :subject %>
      <% end %>
      
      <div class="input string required message">
        <label class="string required" for="message"><abbr title="required">*</abbr>
          Message
        </label>
        <%= text_area_tag 'message', nil, :size => "25x10", :style => 'width: 400px;' %>
      </div>

    
      <div id="form-actions">
        <%= f.button :submit, class: 'btn-primary' %>
        <%= submit_tag 'Cancel', type: :reset, class: 'btn btn-danger' %>
      </div>
  <% end %>
</div>

<script type="text/javascript">

$(document).ready(function(){

  var availableTags = <%= raw @friends %>;

  function split( val ) {
    return val.split( /,\s*/ );
  }
  function extractLast( term ) {
    return split( term ).pop();
  }

  $( "#recipients" )
    // don't navigate away from the field on tab when selecting an item
    .bind( "keydown", function( event ) {
      if ( event.keyCode === $.ui.keyCode.TAB &&
          $( this ).data( "ui-autocomplete" ).menu.active ) {
        event.preventDefault();
      }
    })
    .autocomplete({
      minLength: 0,
      source: function( request, response ) {
        // delegate back to autocomplete, but extract the last term
        response( $.ui.autocomplete.filter(
          availableTags, extractLast( request.term ) ) );
      },
      focus: function() {
        // prevent value inserted on focus
        return false;
      },
      select: function( event, ui ) {
        var terms = split( this.value );
        // remove the current input
        terms.pop();
        // add the selected item
        terms.push( ui.item.value );
        // add placeholder to get the comma-and-space at the end
        terms.push( "" );
        this.value = terms.join( ", " );
        return false;
      },
      messages: {
        noResult: '',
        results: function(){
          return null
        }
      }
    });

});  
  

</script>